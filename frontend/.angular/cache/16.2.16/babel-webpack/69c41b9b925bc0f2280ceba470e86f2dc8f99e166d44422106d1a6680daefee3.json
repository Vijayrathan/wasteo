{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nexport class HttpRequestInterceptor {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  intercept(request, next) {\n    // Get the auth token\n    const token = this.userService.getToken();\n    // Clone the request and add headers\n    const modifiedRequest = request.clone({\n      setHeaders: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        ...(token ? {\n          'Authorization': `Bearer ${token}`\n        } : {})\n      },\n      withCredentials: true\n    });\n    return next.handle(modifiedRequest);\n  }\n  static {\n    this.ɵfac = function HttpRequestInterceptor_Factory(t) {\n      return new (t || HttpRequestInterceptor)(i0.ɵɵinject(i1.UserService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpRequestInterceptor,\n      factory: HttpRequestInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HttpRequestInterceptor","constructor","userService","intercept","request","next","token","getToken","modifiedRequest","clone","setHeaders","withCredentials","handle","i0","ɵɵinject","i1","UserService","factory","ɵfac"],"sources":["/Users/thameem/Desktop/Spring 2025/Waste0/frontend/src/app/interceptors/http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n  constructor(private userService: UserService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Get the auth token\n    const token = this.userService.getToken();\n\n    // Clone the request and add headers\n    const modifiedRequest = request.clone({\n      setHeaders: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n      },\n      withCredentials: true\n    });\n\n    return next.handle(modifiedRequest);\n  }\n} "],"mappings":";;AAWA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IACpD;IACA,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IAEzC;IACA,MAAMC,eAAe,GAAGJ,OAAO,CAACK,KAAK,CAAC;MACpCC,UAAU,EAAE;QACV,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,kBAAkB;QAC5B,IAAIJ,KAAK,GAAG;UAAE,eAAe,EAAE,UAAUA,KAAK;QAAE,CAAE,GAAG,EAAE;OACxD;MACDK,eAAe,EAAE;KAClB,CAAC;IAEF,OAAON,IAAI,CAACO,MAAM,CAACJ,eAAe,CAAC;EACrC;;;uBAlBWR,sBAAsB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAtBhB,sBAAsB;MAAAiB,OAAA,EAAtBjB,sBAAsB,CAAAkB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}